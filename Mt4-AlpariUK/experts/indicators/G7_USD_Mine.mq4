/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/

#property indicator_separate_window
#property indicator_buffers 4
#property indicator_color1 Aqua
#property indicator_color2 Blue
#property indicator_color3 Yellow
#property indicator_color4 Green
#property indicator_width1 1

extern int MA_fast = 1;
extern int MA_slow = 10;
extern int MA_timebase = 60;
extern int MA_method = 0;
extern int MA_applied_price = 0;

//extern string ×÷ÕßQQºÅ = "";
/*
double g_ibuf_96[];
double g_ibuf_100[];
double g_ibuf_104[];
double g_ibuf_108[];
double g_ibuf_112[];
double g_ibuf_116[];
double g_ibuf_120[];
*/
double   MacdBuffer0[];
double   MacdBuffer1[];
double   MacdBuffer2[];
double   MacdBuffer3[];

int init() {
   SetIndexStyle(0, DRAW_HISTOGRAM, STYLE_SOLID);
   SetIndexStyle(1, DRAW_HISTOGRAM, STYLE_SOLID);
   SetIndexStyle(2, DRAW_HISTOGRAM, STYLE_SOLID);
   SetIndexStyle(3, DRAW_HISTOGRAM, STYLE_SOLID);
   SetIndexBuffer(0,MacdBuffer0);
   SetIndexBuffer(1,MacdBuffer1);
   SetIndexBuffer(2,MacdBuffer2);
   SetIndexBuffer(3,MacdBuffer3);
   SetIndexLabel(0,"MACD0");
   SetIndexLabel(1,"MACD1");
   SetIndexLabel(2,"MACD2");
   SetIndexLabel(3,"MACD3");
   
   IndicatorShortName("G7_MACD" + MA_fast + "," + MA_slow + ")");
   IndicatorDigits(4);
   if( MA_fast < 1) MA_fast = 1; 
   if( MA_slow < 1) MA_slow = 1;
   MA_fast = MA_fast * MA_timebase / Period();
   MA_slow = MA_slow * MA_timebase / Period();
   MA_method = MA_method % 4;
   MA_applied_price = MA_applied_price % 7;
   return (0);
}

int start() {
   int counted_bars=IndicatorCounted();
   if (counted_bars > 0) counted_bars--;
   int limit = Bars - counted_bars;
   double ig;
   for (int i = 0; i < limit ; i++) {
      if( Symbol() == "EURUSD") {
         ig = iG7( "EUR", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i ) - iG7( "USD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i );
      } else if( Symbol() == "GBPUSD") {
         ig = iG7( "GBP", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i ) - iG7( "USD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i );
      } else if( Symbol() == "AUDUSD") {
         ig = iG7( "AUD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i ) - iG7( "USD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i );
      } else if( Symbol() == "USDCAD") {
         ig = iG7( "USD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i ) - iG7( "CAD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i );
      } else if( Symbol() == "GBPCHF") {
         ig = iG7( "USD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i ) - iG7( "CHF", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i );
      } else if( Symbol() == "USDJPY") {
         ig = iG7( "USD", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i ) - iG7( "JPY", 0, MA_fast, MA_slow, MA_method, MA_applied_price, i );
      }
       
      if( MathAbs(ig) > 0.3) {
         if( ig > 0)
            MacdBuffer1[i] = ig;
         else 
            MacdBuffer3[i] = ig;
      }
      else {
         if( ig > 0)
            MacdBuffer0[i] = ig;
         else
            MacdBuffer2[i] = ig;
      }
   }
   return (0);
}

double iG7(string sb, int timeframe, int g7_fast, int g7_slow, int ma_method, int applied_price, int shift) {
   double resp=0;
   double mas[6];
   string ac = AccountCompany();
   
   ma_method=ma_method%4;
   applied_price=applied_price%7;    
   
   mas[0] = iMA("EURUSD", 0, g7_fast, 0, ma_method, applied_price, shift) / iMA("EURUSD", 0, g7_slow, 0, ma_method, applied_price, shift);
   mas[1] = iMA("GBPUSD", 0, g7_fast, 0, ma_method, applied_price, shift) / iMA("GBPUSD", 0, g7_slow, 0, ma_method, applied_price, shift);
   mas[2] = iMA("AUDUSD", 0, g7_fast, 0, ma_method, applied_price, shift) / iMA("AUDUSD", 0, g7_slow, 0, ma_method, applied_price, shift);
   mas[3] = iMA("USDCAD", 0, g7_slow, 0, ma_method, applied_price, shift) / iMA("USDCAD", 0, g7_fast, 0, ma_method, applied_price, shift);
   mas[4] = iMA("USDCHF", 0, g7_slow, 0, ma_method, applied_price, shift) / iMA("USDCHF", 0, g7_fast, 0, ma_method, applied_price, shift);
   mas[5] = iMA("USDJPY", 0, g7_slow, 0, ma_method, applied_price, shift) / iMA("USDJPY", 0, g7_fast, 0, ma_method, applied_price, shift);

   if( sb == "EUR") {
      return ( mas[0] * (100 / mas[1] + 100.0 + 100 / mas[2] + 100 / mas[3] + 100 / mas[4] + 100 / mas[5]) - 600.0);
   } else if( sb == "GBP") {
      return ( mas[1] * (100 / mas[0] + 100.0 + 100 / mas[2] + 100 / mas[3] + 100 / mas[4] + 100 / mas[5]) - 600.0);
   } else if( sb == "AUD") {
      return ( mas[2] * (100 / mas[0] + 100.0 + 100 / mas[1] + 100 / mas[3] + 100 / mas[4] + 100 / mas[5]) - 600.0);
   } else if( sb == "CAD") {
      return ( mas[3] * (100 / mas[0] + 100.0 + 100 / mas[1] + 100 / mas[2] + 100 / mas[4] + 100 / mas[5]) - 600.0);
   } else if( sb == "CHF") {
      return ( mas[4] * (100 / mas[0] + 100.0 + 100 / mas[1] + 100 / mas[2] + 100 / mas[3] + 100 / mas[5]) - 600.0);
   } else if( sb == "JPY") {
      return ( mas[5] * (100 / mas[0] + 100.0 + 100 / mas[1] + 100 / mas[2] + 100 / mas[3] + 100 / mas[4]) - 600.0);
   } else if( sb == "USD") {
      return ( 100 / mas[0] + 100 / mas[1] + 100 / mas[2] + 100 / mas[3] + 100 / mas[4] + 100 / mas[5] - 600.0);
   } else {
      Print("Can not find Symbol Config");
      return (-2);
   }
   return (resp);  
}