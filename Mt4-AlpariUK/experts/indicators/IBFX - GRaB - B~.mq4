/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright " Copyright 2010, Interbank FX, LLC. "
#property link      " http://www.ibfx.com "

#property indicator_chart_window
#property indicator_buffers 5
#property indicator_color1 LightBlue
#property indicator_color2 RoyalBlue
#property indicator_color3 LightBlue
#property indicator_color4 RoyalBlue
#property indicator_color5 RoyalBlue

extern color AverageColor = RoyalBlue;
extern color LighterColor = LightBlue;
extern color DarkerColor = RoyalBlue;
extern int WickWidth = 1;
extern int CandleWidth = 4;
string g_symbol_96 = "";
string gs_unused_104 = "";
double g_ibuf_112[];
double g_ibuf_116[];
double g_ibuf_120[];
double g_ibuf_124[];
double g_ibuf_128[];

int init() {
   SetIndexLabel(0, "B_CAND_LIGHT");
   SetIndexBuffer(0, g_ibuf_112);
   SetIndexStyle(0, DRAW_HISTOGRAM, STYLE_SOLID, CandleWidth, LighterColor);
   SetIndexEmptyValue(0, EMPTY_VALUE);
   SetIndexLabel(1, "B_CAND_DARK");
   SetIndexBuffer(1, g_ibuf_116);
   SetIndexStyle(1, DRAW_HISTOGRAM, STYLE_SOLID, CandleWidth, DarkerColor);
   SetIndexEmptyValue(1, EMPTY_VALUE);
   SetIndexLabel(2, "B_WICK_LIGHT");
   SetIndexBuffer(2, g_ibuf_120);
   SetIndexStyle(2, DRAW_HISTOGRAM, STYLE_SOLID, WickWidth, LighterColor);
   SetIndexEmptyValue(2, EMPTY_VALUE);
   SetIndexLabel(3, "B_WICK_DARK");
   SetIndexBuffer(3, g_ibuf_124);
   SetIndexStyle(3, DRAW_HISTOGRAM, STYLE_SOLID, WickWidth, DarkerColor);
   SetIndexEmptyValue(3, EMPTY_VALUE);
   SetIndexLabel(4, "B_AVG_DARK");
   SetIndexBuffer(4, g_ibuf_128);
   SetIndexStyle(4, DRAW_LINE, STYLE_DASH, 1, AverageColor);
   SetIndexEmptyValue(4, EMPTY_VALUE);
   g_symbol_96 = Symbol();
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   double l_ima_12;
   double l_ima_20;
   double l_ima_28;
   double l_iclose_36;
   double l_iopen_44;
   double l_ihigh_52;
   double l_ilow_60;
   int li_0 = IndicatorCounted();
   if (li_0 < 0) return (-1);
   if (li_0 > 0) li_0--;
   int li_4 = Bars - li_0 - 1;
   for (int li_8 = li_4; li_8 >= 0; li_8--) {
      l_ima_12 = iMA(g_symbol_96, 0, 34, 0, MODE_EMA, PRICE_HIGH, li_8);
      l_ima_20 = iMA(g_symbol_96, 0, 34, 0, MODE_EMA, PRICE_LOW, li_8);
      l_ima_28 = iMA(g_symbol_96, 0, 34, 0, MODE_EMA, PRICE_CLOSE, li_8);
      l_iclose_36 = iClose(g_symbol_96, 0, li_8);
      l_iopen_44 = iOpen(g_symbol_96, 0, li_8);
      l_ihigh_52 = iHigh(g_symbol_96, 0, li_8);
      l_ilow_60 = iLow(g_symbol_96, 0, li_8);
      if (l_iclose_36 >= l_ima_20 && l_iclose_36 <= l_ima_12) {
         g_ibuf_112[li_8] = l_iclose_36;
         g_ibuf_116[li_8] = l_iopen_44;
         if (l_iclose_36 >= l_iopen_44) {
            g_ibuf_120[li_8] = l_ihigh_52;
            g_ibuf_124[li_8] = l_ilow_60;
         } else {
            g_ibuf_124[li_8] = l_ihigh_52;
            g_ibuf_120[li_8] = l_ilow_60;
         }
      }
      g_ibuf_128[li_8] = l_ima_28;
   }
   return (0);
}
